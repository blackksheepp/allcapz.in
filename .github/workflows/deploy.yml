name: Build and Deploy

on:
  push:
    branches: ["master"]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
  HOST: ${{ secrets.HOST }}
  REPO: ${{ secrets.REPO }}

jobs:
  build:
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ./Dockerfile
          platforms: linux/arm64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPO }}:arm64
          build-args: --force-rm

  deploy:
    needs: build
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Setup Environment (.env file)
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.HOST }} << 'EOF'
            cat <<EOT > .env
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            REDIS_URI=${{ secrets.REDIS_URI }}
            SMTP_HOST=${{ secrets.SMTP_HOST }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}
            SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
            AUTH_URL=${{ secrets.AUTH_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            RAZORPAY_ID=${{ secrets.RAZORPAY_ID }}
            RAZORPAY_KEY=${{ secrets.RAZORPAY_KEY }}
            SHIPROCKET_EMAIL=${{ secrets.SHIPROCKET_EMAIL }}
            SHIPROCKET_PASSWORD=${{ secrets.SHIPROCKET_PASSWORD }}
            ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            TELEGRAM_CHANNEL=${{ secrets.TELEGRAM_CHANNEL }}
            STORAGE_API_KEY=${{ secrets.STORAGE_API_KEY }}
            EOT
          EOF

      - name: Setup Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.HOST }} << 'EOF'
            cat <<EOT > docker-compose.yml
            services:
              app:
                image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.REPO }}:arm64
                env_file:
                  - .env
                ports:
                  - "8000:8000"
            EOT
          EOF

      - name: Deploy Application
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.HOST }} << 'EOF'
            docker compose pull
            docker compose up -d
          EOF
